package database

import (
	"fmt"
	song_model "root/module/song/dto"
	"root/shared/logger"

	"gorm.io/gorm"
)


func Migrate(db *gorm.DB, trigger bool, log *logger.Logger) error {
	if trigger {
		log.Info("üì¶ Starting database migration...")

		// –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã Group
		log.Debug("üîç Migrating Group model")
		if err := db.AutoMigrate(&song_model.Group{}); err != nil {
			log.Errorf("‚úñ Failed to migrate Group table: %v", err)
			return err
		}

		// –ú–∏–≥—Ä–∞—Ü–∏—è —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü Song
		log.Debug("üîç Migrating Song model across shards")
		for i := 0; i < NumShards; i++ {
			tableName := fmt.Sprintf("songs_%d", i)
			if err := db.Table(tableName).AutoMigrate(&song_model.Song{}); err != nil {
				log.Errorf("‚úñ Failed to migrate shard table %s: %v", tableName, err)
				return err
			}
			log.Infof("‚úÖ Shard table %s migrated successfully", tableName)
		}

		log.Info("‚úÖ Database migration completed successfully")
	} else {
		log.Info("‚ÑπÔ∏è Migration trigger is disabled, skipping migration")
	}

	log.Info("‚úÖ Database connection established successfully")
	return nil
}
